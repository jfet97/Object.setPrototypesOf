if(!Object.setPrototypesOf){Object.setPrototypesOf=function(target,...prototypes){if(!target||typeof target!="object"){throw new TypeError("'target' must be an object")}
if(prototypes.length==0){throw new TypeError("insert two or more prototypes")}
if(prototypes.length==1){throw new TypeError("use Object.setPrototypeOf instead")}
if(prototypes.some(prototype=>typeof prototype!="object"||!prototype)){throw new TypeError("a prototype is not an object")}
target[Symbol.for("[[Prototypes]]")]=[...prototypes];const proxy=new Proxy({},{get(target,propertyKey,receiver){for(const prototype of receiver[Symbol.for("[[Prototypes]]")]){if(Reflect.has(prototype,propertyKey)){return Reflect.get(prototype,propertyKey,receiver)}}
return undefined},set(target,propertyKey,value,receiver){for(const prototype of receiver[Symbol.for("[[Prototypes]]")]){if(Reflect.has(prototype,propertyKey)){return Reflect.set(prototype,propertyKey,value,receiver)}}
return Reflect.defineProperty(receiver,propertyKey,{value})},});Object.setPrototypeOf(target,proxy);return target}}
